{"version":3,"sources":["component/Select.js","component/Button.js","component/TutorCard.js","App.js","reportWebVitals.js","index.js"],"names":["Select","children","value","onChange","defaultValue","options","map","option","id","name","className","e","find","el","target","Button","onClick","TutorCard","tutorObject","src","photoPath","alt","firstName","patrName","subject","minPricePerHour","App","useState","subjects","setSubjects","areas","setAreas","disctricts","setDisctricts","selectedSubjectData","setSelectedSubjectData","selectedAreaData","setSelectedAreaData","selectedDistrictData","setSelectedDistrictAreaData","availableTutors","setAvailableTutors","tutorsToShow","setTutorsToShow","tutorsShortData","setTutorsShortData","next","setNext","useEffect","loopWhithSLice","Promise","all","fetch","then","responses","r","json","data","query","forEach","i","a","rawData","fetchData","response","catch","err","console","error","start","end","slicedTutors","slice","prevState","concat","cityName","district","url","tutors","log","getData","tutor","teachingSubjects","photoPathSquare","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8c82020.chunk.js","sourcesContent":["\r\n\r\n    const Select = ({children, value, onChange, defaultValue}) => {\r\n    \r\n\r\n    const options = children.map(option=>{\r\n        return (\r\n            <option key={option.id} id={option.id}>{option.name}</option>\r\n        )\r\n    })\r\n\r\n\r\n        return (\r\n            <select className='filter-select' value={value} onChange={(e) => {\r\n                onChange(children.find(el => {\r\n                    if (el.name === e.target.value) {\r\n                        return el\r\n                    }\r\n                }))\r\n\r\n            }}>\r\n                <option> {defaultValue} </option>\r\n                {options}\r\n            </select>\r\n        )\r\n    }\r\n\r\nexport default Select","\r\nconst Button = ({ children, onClick, className }) => {\r\n    return (\r\n        <button\r\n            className={`btn ${className}`}\r\n            onClick={onClick}\r\n        >{children}</button>\r\n    )\r\n}\r\n\r\nexport default Button","const TutorCard = ({ tutorObject }) => {\r\n\r\n  return (\r\n    <div className=\"tutor-card\">\r\n      <img className=\"tutor-card__avatar\" src={tutorObject.photoPath} alt=\"Фотография репетитора\"/>{\" \"}\r\n      <div className=\"tutor-card__add-info\">\r\n        <p className=\"tutor-card__name\">\r\n          {tutorObject.firstName} {tutorObject.patrName}\r\n        </p>\r\n        <p className=\"tutor-card__subject\"> {tutorObject.subject} </p> <p className=\"tutor-card__price\"> от {tutorObject.minPricePerHour} р </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TutorCard;\r\n","import './App.css'\nimport Select from './component/Select'\nimport Button from './component/Button'\nimport TutorCard from './component/TutorCard'\nimport { useState, useEffect } from 'react'\n\n\nconst tutorPerDownload = 10\n\nfunction App() {\n\n\n  const [subjects, setSubjects] = useState([])\n  const [areas, setAreas] = useState([])\n  const [disctricts, setDisctricts] = useState([])\n\n\n  const [selectedSubjectData, setSelectedSubjectData] = useState({ name: '', id: null })\n  const [selectedAreaData, setSelectedAreaData] = useState({ name: '', id: null })\n  const [selectedDistrictData, setSelectedDistrictAreaData] = useState({ name: '', id: null })\n\n  const [availableTutors, setAvailableTutors] = useState([])\n\n  const [tutorsToShow, setTutorsToShow] = useState([77475, 41671, 258])\n  const [tutorsShortData, setTutorsShortData] = useState([]) // для более детальной информации по туторам\n  const [next, setNext] = useState(10)\n\n  useEffect(() => {\n\n    loopWhithSLice(0, tutorPerDownload)\n\n  }, [availableTutors])\n\n  useEffect(() => {\n\n    Promise.all([\n      fetch('https://api.repetit.ru/public/subjects'),\n      fetch('https://api.repetit.ru/public/areas')\n    ]).then(responses => Promise.all(responses.map(r => r.json())))\n      .then(data => {\n        setSubjects(data[0])\n        setAreas(data[1])\n      })\n  }, [])\n\n  useEffect(() => {\n    let query = '?'\n    tutorsToShow.forEach((id, i) => {\n      query += `Ids[${i}]=${id}&`\n    })\n    let url = 'https://api.repetit.ru/public/teachers/short'\n    const fetchData = async () => {\n      const rawData = await fetch(url + query)\n      const data = await rawData.json()\n      setTutorsShortData(data)\n    }\n\n    fetchData()\n\n\n  }, [tutorsToShow])\n\n\n  useEffect(() => {\n    fetch('https://api.repetit.ru/public/districts?AreaId=' + (selectedAreaData.id || 1))\n      .then(response => response.json())\n      .then(data => setDisctricts(data))\n      .catch(err => console.error(err))\n  }, [selectedAreaData.id])\n  // TODO: если не выбран город, то районы выбираются московские, нужно что бы было пусто.\n\n \n\n  const loopWhithSLice = (start, end) => {\n    const slicedTutors = availableTutors.slice(start, end)\n    setTutorsToShow(prevState => {\n      return prevState.concat(slicedTutors)\n    })\n\n  }\n\n  const applyFilter = () => {\n    setTutorsToShow([])\n\n    const getData = async () => {\n      const url = `https://api.repetit.ru/public/search/teacherIds?areaId=${selectedAreaData.id}&districtId=${selectedDistrictData.id}&subjectId=${selectedSubjectData.id}`\n      try {\n        const rawData = await fetch(url)\n        const tutors = await rawData.json()\n        setAvailableTutors(tutors)\n\n      } catch (err) {\n        console.log(err)\n      }\n    }\n\n    getData()\n\n\n\n  }\n  const getMoreTutors = () => {\n    loopWhithSLice(next, next + tutorPerDownload)\n    setNext(next + tutorPerDownload)\n    //TODO: Если элементов массива больше нет - вывести предупреждение пользователю что больше доступных преподавателей нет \n\n  }\n  return (\n    <div className='wrapper'>\n      <div className='filter-panel'>\n        <Select\n          defaultValue='Укажите предмет'\n          value={selectedSubjectData.name}\n          onChange={setSelectedSubjectData}\n        >\n\n          {\n            subjects.map(subject => {\n              return (\n                { id: subject.id, name: subject.name }\n              )\n            })\n          }\n        </Select>\n        <Select\n          defaultValue='Укажите город'\n          value={selectedAreaData.name}\n          onChange={setSelectedAreaData}\n        >\n          {\n            areas.map(areas => {\n              return (\n                { id: areas.id, name: areas.cityName }\n              )\n            })\n          }\n        </Select>\n\n        <Select\n          defaultValue='Укажите район'\n          value={selectedDistrictData.name}\n          onChange={setSelectedDistrictAreaData}\n        >\n          {\n            disctricts.map(district => {\n              return (\n                { id: district.id, name: district.name }\n              )\n            })\n\n          }\n\n\n\n        </Select>\n\n        <Button\n          onClick={applyFilter}\n          className='btn-main'\n        > Применить фильтр </Button>\n      </div>\n      <main>\n        <div className='tutors-cards'>\n          {\n            tutorsShortData.map(tutor => {\n              return (\n                <TutorCard key={tutor.id} tutorObject={{\n                  subject: tutor.teachingSubjects[0].subject.name,\n                  photoPath: tutor.photoPathSquare,\n                  firstName: tutor.firstName,\n                  patrName: tutor.patrName,\n                  id: tutor.id,\n                  minPricePerHour: tutor.minPricePerHour\n\n                }} />\n              )\n            })\n          }\n        </div>\n\n\n        <Button onClick={getMoreTutors} className='btn-accent'> Загрузить еще </Button>\n      </main>\n\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}